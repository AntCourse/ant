<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kzsrm.model.UserMapper">
	<resultMap id="BaseResultMap" type="com.kzsrm.model.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="passwd" jdbcType="VARCHAR" property="passwd" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="birthday" jdbcType="VARCHAR" property="birthday" />
		<result column="qq" jdbcType="VARCHAR" property="qq" />
		<result column="sign" jdbcType="VARCHAR" property="sign" />
		<result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
		<result column="logintime" jdbcType="TIMESTAMP" property="logintime" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="avator" jdbcType="VARCHAR" property="avator" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="regnum" jdbcType="INTEGER" property="regnum" />
		<result column="lastreg" jdbcType="VARCHAR" property="lastreg" />
		<result column="honor" jdbcType="VARCHAR" property="honor" />
		<result column="learntime" jdbcType="VARCHAR" property="learntime" />
		<result column="examtype" jdbcType="VARCHAR" property="examtype" />
		<result column="coin" jdbcType="INTEGER" property="coin" />

		<!-- 验证码表字段 -->
		<result column="yzm" jdbcType="VARCHAR" property="yzm" />

	</resultMap>
	<sql id="Base_Column_List">
		id, name, age, sex, phone, passwd, email, sign, regtime,
		logintime,
		status
	</sql>

	<select id="getById" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="isUnique" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from user where phone = #{phone} or email =
		#{email}
	</select>

	<!-- 添加验证码 -->
	<insert id="insertYZM" parameterType="com.kzsrm.model.User"
		keyProperty="id">
		insert into yzm(id,phone,email,yzm,regtime)
		values(#{id,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{yzm,jdbcType=VARCHAR},#{regtime,jdbcType=VARCHAR})
	</insert>

	<!-- 查询是否已有此用户 -->
	<select id="selectIsExitUser" parameterType="map" resultMap="BaseResultMap">
		select * from user
		where phone = #{phone} or email = #{email}
	</select>


	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from user
		where id =
		#{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="map" keyProperty="id"
		useGeneratedKeys="true">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="passwd != null">
				passwd,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="sign != null">
				sign,
			</if>
			<if test="regtime != null">
				regtime,
			</if>
			<if test="logintime != null">
				logintime,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="passwd != null">
				#{passwd,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="sign != null">
				#{sign,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				#{regtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logintime != null">
				#{logintime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateById" parameterType="com.kzsrm.model.User">

		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="passwd != null">
				passwd = #{passwd,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="sign != null">
				sign = #{sign,jdbcType=VARCHAR},
			</if>
			<if test="regtime != null">
				regtime = #{regtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logintime != null">
				logintime = #{logintime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				qq = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="avator != null">
				avator = #{avator,jdbcType=VARCHAR},
			</if>
			<if test="coin != null">
				coin = #{coin,jdbcType=INTEGER},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=VARCHAR},
			</if>
			<if test="regnum != null">
				regnum = #{regnum,jdbcType=INTEGER},
			</if>
			<if test="lastreg != null">
				lastreg = #{lastreg,jdbcType=VARCHAR},
			</if>
			<if test="honor != null">
				honor = #{honor,jdbcType=VARCHAR},
			</if>
			<if test="learntime != null">
				learntime = #{learntime,jdbcType=VARCHAR},
			</if>
			<if test="examtype != null">
				examtype = #{examtype,jdbcType=VARCHAR}
			</if>

		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>