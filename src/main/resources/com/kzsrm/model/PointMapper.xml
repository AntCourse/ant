<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kzsrm.model.PointMapper" >
  <resultMap id="BaseResultMap" type="com.kzsrm.model.Point" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    t.id, t.name, t.content, t.type, t.course_id
  </sql>
  
  <select id="getPoisBySub" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select distinct
	<include refid="Base_Column_List" />
    from tag_subject s, video_tag v, point_video p, point t
    where s.tid = v.tid and v.vid = p.vid and p.pid =t.id 
    and s.sid = #{subjectId,jdbcType=VARCHAR}
  </select>
  
  <select id="getPointByCour" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from point t
    where t.course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  
  <select id="findAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from point t
  </select>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from point t
    where t.id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from point
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kzsrm.model.Point" >
    insert into point (id, name, content, 
      type, course_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kzsrm.model.Point" >
    insert into point
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kzsrm.model.Point" >
    update point
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.kzsrm.model.Point" >
    update point
    set name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>